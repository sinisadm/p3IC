// <auto-generated />
using System;
using Dropbox.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Dropbox.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220129123706_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Dropbox.Domain.Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character varying(17)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7cc09ce3-9452-4653-be3f-e5d602feb187"),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            MacAddress = "00-14-22-01-23-45",
                            Name = "Kompjuter 1"
                        });
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFolder")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ParentItemId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RootFolderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserDeviceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentItemId");

                    b.HasIndex("RootFolderId")
                        .IsUnique();

                    b.HasIndex("UserDeviceId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("OuotaUsed")
                        .HasColumnType("bigint");

                    b.Property<long>("QuotaLimit")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4caec599-49b1-4a09-96a7-5cf3556fa21e"),
                            DeletedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sinisadm@gmail.com",
                            IsDeleted = false,
                            OuotaUsed = 0L,
                            QuotaLimit = 2147483648L
                        });
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("RootFolderId")
                        .HasColumnType("uuid");

                    b.Property<string>("SyncFolder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersDevices");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.Item", b =>
                {
                    b.HasOne("Dropbox.Domain.Entities.Item", "ParentItem")
                        .WithMany("Members")
                        .HasForeignKey("ParentItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dropbox.Domain.Entities.UserDevice", "RootFolder")
                        .WithOne("RootFolder")
                        .HasForeignKey("Dropbox.Domain.Entities.Item", "RootFolderId");

                    b.HasOne("Dropbox.Domain.Entities.UserDevice", "UserDevice")
                        .WithMany("Items")
                        .HasForeignKey("UserDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentItem");

                    b.Navigation("RootFolder");

                    b.Navigation("UserDevice");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.UserDevice", b =>
                {
                    b.HasOne("Dropbox.Domain.Entities.Device", "Device")
                        .WithMany("Users")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dropbox.Domain.Entities.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.Device", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.Item", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.User", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Dropbox.Domain.Entities.UserDevice", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("RootFolder");
                });
#pragma warning restore 612, 618
        }
    }
}
